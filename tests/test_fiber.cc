#include "libcocao/libcocao.h"libcocao::Logger::ptr g_logger = LIBCOCAO_LOG_ROOT();void run_in_fiber() {    LIBCOCAO_LOG_INFO(g_logger) << "run_in_fiber begin";    libcocao::Fiber::GetThis()->yield();    LIBCOCAO_LOG_INFO(g_logger) << "run_in_fiber_end";    libcocao::Fiber::GetThis()->yield();}void test_fiber() {    LIBCOCAO_LOG_INFO(g_logger) << "main begin1";    {        libcocao::Fiber::GetThis();        libcocao::Fiber::ptr fiber (new libcocao::Fiber(run_in_fiber));        fiber->resume();        LIBCOCAO_LOG_INFO(g_logger) << "main after fiber 1";        fiber->resume();        LIBCOCAO_LOG_INFO(g_logger) << "main after fiber 2";        fiber->resume();    }    LIBCOCAO_LOG_INFO(g_logger) << "main end";}int main () {    libcocao::Thread::setName("main");    std::vector<libcocao::Thread::ptr> thrs;    for (int i = 0; i < 3; ++ i) {        thrs.push_back(libcocao::Thread::ptr(new libcocao::Thread(&test_fiber, "name_" + std::to_string(i))));    }    for (auto &i: thrs) i->join();    return 0;}