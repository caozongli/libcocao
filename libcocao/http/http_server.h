#ifndef __LIBCOCAO_HTTP_HTTP_SERVER_H__#define __LIBCOCAO_HTTP_HTTP_SERVER_H__#include "../tcp_server.h"#include "http_session.h"#include "servlet.h"namespace libcocao {namespace http {class HttpServer : public TcpServer {public:    typedef std::shared_ptr<HttpServer> ptr;    /**     * 构造函数     * @param keepalive 是否长链接     * @param worker 工作调度器     * @param io_worker     * @param accept_worker 接收连接调度器     */    HttpServer(bool keepalive = false            , libcocao::IOManager* worker = libcocao::IOManager::GetThis()            , libcocao::IOManager* io_worker = libcocao::IOManager::GetThis()            , libcocao::IOManager* accept_worker = libcocao::IOManager::GetThis());    /**     * 获取ServletDispatch     * @return     */    ServletDispatch::ptr getServletDispatch () const { return m_dispatch; }    void setServletDispatch (ServletDispatch::ptr v) { m_dispatch = v; }    virtual void setName (const std::string &v) override;protected:    virtual void handleClient (Socket::ptr client) override;private:    /// 是否支持长链接    bool m_isKeepalive;    /// Servlet分发器    ServletDispatch::ptr m_dispatch;};}}#endif